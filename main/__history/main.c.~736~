#include <main.h>
#include <lcd.h>
#include <motor_drive.h>
#define PWM_MAX 1023;
#define PWM_MIN 0;

#define START        PIN_B1
#define RESET        PIN_B5
#define RUN          PIN_B0



void reset_method()
{
   lcd_clear();
   while(input_state(RESET) == 0)
   {
      if(input_state(RESET) == 0)
      {
        lcd_gotoxy(1,1);
        printf(lcd_putc, "CPU RESET");
        reset_cpu();
      }
   }
}

void run_method()
{
   lcd_clear();
   output_high(PIN_B4);
   output_low(PIN_B3);
   output_low(PIN_B2);


   while(input_state(RUN) == 0)
   {
      delay_us(10);
      if(input_state(RUN) == 0)
      {
         read_sensor();
         putc(get_tris_a());
         PID_control();
      }
   }
}

void get_adc()
{
   lcd_clear();
   lcd_gotoxy(1,1);
   while(input_state(RESET) == 0)
   {
      delay_us(20);
      if(input_state(RESET) == 0)
      {
         putc(sensor);
         printf(lcd_putc, "ADC is running...");
         output_high(PIN_B2);
         output_low(PIN_B3);
         output_low(PIN_B4);
         TB_ADC();
         lcd_clear();
         lcd_gotoxy(1,1);
         output_low(PIN_B2);
         output_high(PIN_B3);
         output_low(PIN_B4);
         printf(lcd_putc, "ADC is reading");
         delay_ms(100);
      }
   }
}

void main()
{
   setup_spi (SPI_MASTER|SPI_L_TO_H|SPI_CLK_DIV_4) ;

   //Ham cai dat adc
   
   enable_interrupts (INT_EXT); //ngat ngoai 0
   enable_interrupts (INT_EXT1); //ngat ngoai 1
   enable_interrupts (GLOBAL); //Ngat toan cuc
   
   setup_timer_1 (T1_INTERNAL|T1_DIV_BY_8); //1.6us interrupts
   set_timer1 (49911); // 25ms overflow
   enable_interrupts (INT_TIMER1);
   
   setup_timer_2 (T2_DIV_BY_4, 168, 1); //819 us overflow, 819 us interrupt 1, 221Hz
   setup_adc (ADC_CLOCK_DIV_2);
   setup_adc_ports (ALL_ANALOG);
   setup_ccp1 (CCP_PWM);
   setup_ccp2 (CCP_PWM);

   set_tris_a (0x7f);
   //output_high (PIN_B2);
   //set_pwm1_duty ( (INT16) 0); //duty 50 % max 1023 min 1 // xe chay khong duoc 1 vong / p
   //set_pwm2_duty ( (INT8) 216) ;
   lcd_init ();
      output_low(PIN_B6);
   output_low(PIN_B7);

   lcd_clear();
   WHILE (true)
   {
      set_pwm1_duty(0);
      set_pwm2_duty(0);
      set_tris_b(00100011);
      //Lap trinh cho nut nhan reset
      if(input_state(RESET) == 0)
         reset_method();
      
      if(input_state(RUN) == 0)
      {
         printf(lcd_putc, "ADC is reading");
         run_method();
      }
      
      if(input_state(START) == 0)
      {
         get_adc();
      }
      
   }
}

